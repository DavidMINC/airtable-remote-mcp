version: '3.8'

services:
  airtable-mcp:
    build: .
    ports:
      - "8000:8000"
    environment:
      - AIRTABLE_API_KEY=${AIRTABLE_API_KEY}
      - HOST=0.0.0.0
      - PORT=8000
      - ENVIRONMENT=production
      - BASE_URL=${BASE_URL:-http://localhost:8000}
      - SECRET_KEY=${SECRET_KEY:-your-secret-key-change-in-production}
      - ALLOWED_ORIGINS=${ALLOWED_ORIGINS:-*}
      - RATE_LIMIT_ENABLED=true
      - RATE_LIMIT_REQUESTS=100
      - RATE_LIMIT_WINDOW=3600
      - LOG_LEVEL=INFO
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "python", "-c", "import httpx; httpx.get('http://localhost:8000/health', timeout=5)"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    volumes:
      - ./logs:/app/logs
    networks:
      - airtable-mcp-network

  # Optional: Redis for production token storage
  redis:
    image: redis:7-alpine
    restart: unless-stopped
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    networks:
      - airtable-mcp-network
    profiles:
      - production

  # Optional: Nginx reverse proxy
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - airtable-mcp
    restart: unless-stopped
    networks:
      - airtable-mcp-network
    profiles:
      - production

volumes:
  redis_data:

networks:
  airtable-mcp-network:
    driver: bridge
